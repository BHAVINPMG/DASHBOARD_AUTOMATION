{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "type": "object",
  "properties": {
    "id": {
      "type": "integer"
    },
    "container.type": {
      "type": "string",
      "const": "dashboard"
    },
    "visualization.name": {
      "type": "string"
    },
    "visualization.description": {
      "type": "string"
    },
    "visualization.granularity": {
      "type": "string",
      "pattern": "^\\d+\\s[s|m|h|d|M]$",
      "default": "10 m",
      "description": "If not specified, '10 m' will be used as the default visualization granularity."
    },
    "visualization.timeline": {
      "type": "object",
      "description": "Timeline selection for the visualization. Defaults to 'today' if not specified.",
      "properties": {
        "relative.timeline": {
          "type": "string",
          "pattern": "^(custom|today|yesterday|this\\.(week|month)|last\\.(week|month|quarter|year)|-\\d+[mhd])$",
          "default": "today"
        },
        "from.date": {
          "type": "string",
          "pattern": "^\\d{4}/\\d{2}/\\d{2}$"
        },
        "from.time": {
          "type": "string",
          "pattern": "^\\d{2}:\\d{2}:\\d{2}$"
        },
        "to.date": {
          "type": "string",
          "pattern": "^\\d{4}/\\d{2}/\\d{2}$"
        },
        "to.time": {
          "type": "string",
          "pattern": "^\\d{2}:\\d{2}:\\d{2}$"
        },
        "visualization.time.range.inclusive": {
          "type": "string",
          "enum": [
            "yes",
            "no"
          ],
          "default": "yes"
        }
      },
      "default": {
        "relative.timeline": "today",
        "visualization.time.range.inclusive": "yes"
      }
    },
    "visualization.category": {
      "type": "string",
      "const": "TopN"
    },
    "visualization.type": {
      "type": "string",
      "enum": [
        "Area",
        "Line",
        "HorizontalBar",
        "VerticalBar",
        "TopN Solid Gauge View",
        "Pie",
        "Grid"
      ],
      "default": "Area",
      "description": "If not specified, 'Area' will be used as the default visualization type."
    },
    "child.visualization": {
      "type": "string",
      "enum": [
        "Packed Bubble Chart",
        "Tree View"
      ],
      "description": "Child visualization for Pie (Packed Bubble Chart) or Grid (Tree View) types."
    },
    "visualization.data.sources": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "metric",
              "log",
              "flow",
              "policy",
              "availability"
            ]
          },
          "filters": {
            "type": "object",
            "properties": {
              "data.filter": {
                "type": "object",
                "properties": {
                  "operator": {
                    "type": "string",
                    "enum": [
                      "and",
                      "or"
                    ]
                  },
                  "filter": {
                    "type": "string",
                    "enum": [
                      "include",
                      "exclude"
                    ]
                  },
                  "groups": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "filter": {
                          "type": "string",
                          "enum": [
                            "include",
                            "exclude"
                          ]
                        },
                        "operator": {
                          "type": "string",
                          "enum": [
                            "and",
                            "or"
                          ]
                        },
                        "conditions": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "operand": {
                                "type": "string"
                              },
                              "operator": {
                                "type": "string",
                                "enum": [
                                  "=",
                                  "contains",
                                  "in",
                                  "start with",
                                  "end with"
                                ]
                              },
                              "value": {
                                "type": [
                                  "string",
                                  "number",
                                  "boolean"
                                ]
                              }
                            },
                            "required": [
                              "operand",
                              "operator",
                              "value"
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              },
              "result.filter": {
                "type": "object"
              },
              "drill.down.filter": {
                "type": "object"
              }
            }
          },
          "data.points": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "data.point": {
                  "type": "string"
                },
                "aggregator": {
                  "type": "string",
                  "enum": [
                    "avg",
                    "min",
                    "max",
                    "sum",
                    "last",
                    "count",
                    "sparkline"
                  ]
                },
                "allOf": [
                  {
                    "if": {
                      "not": {
                        "required": [
                          "entity.type"
                        ]
                      }
                    },
                    "then": {
                      "properties": {
                        "entities": {
                          "type": "array",
                          "maxItems": 0
                        }
                      }
                    }
                  }
                ],
                "properties": {
                  "entity.type": {
                    "type": "string",
                    "enum": [
                      "Monitor",
                      "Group",
                      "Tag",
                      "event.source",
                      "event.source.type"
                    ]
                  },
                  "entities": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  }
                },
                "statistical.func": {
                  "type": "string",
                  "enum": [
                    "log2",
                    "log10"
                  ]
                }
              }
            }
          },
          "if": {
            "properties": {
              "type": {
                "const": "policy"
              }
            }
          },
          "then": {
            "properties": {
              "category": {
                "type": "string",
                "enum": [
                  "metric",
                  "log",
                  "flow",
                  "trap"
                ]
              }
            }
          },
          "else": {
            "not": {
              "required": ["category"]
            }
          }
        }
      }
    },
    "visualization.properties": {
      "type": "object",
      "properties": {
        "sparkline": {
          "type": "string",
          "enum": [
            "yes",
            "no"
          ],
          "description": "Enable sparkline support for Grid visualization type (metric type only)."
        },
        "chart": {
          "type": "object",
          "properties": {
            "rotation.angle": {
              "type": "string",
              "description": "Optional field - only include if explicitly specified by user."
            },
            "chart.legend": {
              "type": "string",
              "enum": [
                "yes",
                "no"
              ]
            },
            "vertical.legend": {
              "type": "string",
              "enum": [
                "yes",
                "no"
              ]
            },
            "line.width": {
              "type": "integer",
              "description": "Optional field - only include if explicitly specified by user."
            },
            "chart.label": {
              "type": "string",
              "enum": [
                "yes",
                "no"
              ]
            },
            "axis.titles": {
              "type": "object",
              "properties": {
                "x": {
                  "type": "string"
                },
                "y": {
                  "type": "string"
                },
                "z": {
                  "type": "string"
                }
              }
            },
            "highchart.settings": {
              "type": "object"
            },
            "sorting": {
              "type": "object",
              "properties": {
                "limit": {
                  "type": "integer",
                  "maximum": 50
                },
                "order": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                },
                "column": {
                  "type": "string"
                }
              },
              "required": [
                "limit",
                "order",
                "column"
              ]
            }
          }
        },
        "grid": {
          "type": "object",
          "properties": {
            "visualization.grid.properties.required": {
              "type": "string",
              "enum": [
                "yes",
                "no"
              ]
            },
            "searchable": {
              "type": "string",
              "enum": [
                "yes",
                "no"
              ]
            },
            "column.selection": {
              "type": "string",
              "enum": [
                "yes",
                "no"
              ]
            },
            "header": {
              "type": "string",
              "enum": [
                "yes",
                "no"
              ]
            },
            "style": {
              "type": "object",
              "properties": {
                "header.font.size": {
                  "type": "string",
                  "enum": [
                    "small",
                    "medium",
                    "large"
                  ]
                }
              }
            },
            "columns": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "title": {
                    "type": "string"
                  },
                  "show": {
                    "type": "string",
                    "enum": [
                      "yes",
                      "no"
                    ]
                  },
                  "sortable": {
                    "type": "string",
                    "enum": [
                      "yes",
                      "no"
                    ]
                  },
                  "disable": {
                    "type": "string",
                    "enum": [
                      "yes",
                      "no"
                    ]
                  },
                  "resizable": {
                    "type": "string",
                    "enum": [
                      "yes",
                      "no"
                    ]
                  },
                  "selectable": {
                    "type": "string",
                    "enum": [
                      "yes",
                      "no"
                    ]
                  },
                  "orderable": {
                    "type": "string",
                    "enum": [
                      "yes",
                      "no"
                    ]
                  },
                  "position": {
                    "type": "integer"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "sparkline"
                    ]
                  },
                  "style": {
                    "type": "object",
                    "properties": {
                      "width.percent": {
                        "type": "number"
                      },
                      "inline.chart": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "sparkline"
                            ]
                          },
                          "color": {
                            "type": "string"
                          }
                        }
                      },
                      "color.conditions": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "operator": {
                              "type": "string",
                              "enum": [
                                "=",
                                ">",
                                ">=",
                                "<",
                                "<=",
                                "contain"
                              ]
                            },
                            "value": {
                              "type": "string"
                            },
                            "color.type": {
                              "type": "string",
                              "enum": [
                                "foreground",
                                "background"
                              ]
                            },
                            "color": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "required": [
                  "name",
                  "show",
                  "sortable",
                  "disable",
                  "resizable",
                  "selectable",
                  "orderable"
                ]
              }
            },
            "sorting": {
              "type": "object",
              "properties": {
                "limit": {
                  "type": "integer",
                  "maximum": 50
                },
                "order": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                },
                "column": {
                  "type": "string"
                }
              },
              "required": [
                "limit",
                "order",
                "column"
              ]
            }
          }
        }
      }
    },
    "visualization.result.by": {
      "type": "array",
      "items": {
        "type": "string",
        "enum": [
          "monitor",
          "tag",
          "group",
          "event.source.type",
          "event.severity",
          "event.category",
          "event.source",
          "destination.aso",
          "destination.port",
          "source.aso",
          "destination.if.index",
          "destination.isp",
          "source.domain",
          "destination.threat",
          "protocol",
          "destination.city",
          "source.ip",
          "tos",
          "source.isp",
          "source.city",
          "tcp.flags",
          "source.as",
          "source.threat",
          "destination.domain",
          "destination.ip.as",
          "destination.ip",
          "source.country",
          "source.if.index",
          "application",
          "source.port",
          "destination.as",
          "destination.country",
          "user",
          "severity",
          "policy.id",
          "object.id"
        ]
      }
    }
  },
  "required": [
    "visualization.category",
    "visualization.type",
    "visualization.data.sources",
    "visualization.properties"
  ]
} 